// <auto-generated />
using DataAccessLayer.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MyDataAccessLayer.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DataAccessLayer.Models.Pen", b =>
                {
                    b.Property<int>("PenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("PenId");

                    b.ToTable("Pens");
                });

            modelBuilder.Entity("MyDataAccessLayer.Models.PenBrand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PenId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("PenId")
                        .IsUnique();

                    b.ToTable("PenBrands");
                });

            modelBuilder.Entity("MyDataAccessLayer.Models.PenBrand", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Pen", "Pen")
                        .WithOne("PenBrand")
                        .HasForeignKey("MyDataAccessLayer.Models.PenBrand", "PenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pen");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Pen", b =>
                {
                    b.Navigation("PenBrand");
                });
#pragma warning restore 612, 618
        }
    }
}
